# Survival outcomes

<!-- Jie (30 min) -->

::: callout-note
## Learning outcomes

-   Perform causal mediation analysis with survival outcomes using R
    software
:::

## Time-to-event outcomes

There are many studies conducting mediation analyses with
**time-to-event outcomes**. Survival analysis allows investigators to
study these important outcomes with appropriate consideration for
variable follow-up times, censoring, and competing risks.

Take the red meat example for instance, we previously demonstrated
higher red meat intake increased blood glucose. However, we might be
even more interested in whether red meat intake increase the onset of
type 2 diabetes (T2D). If we have the diagnosis date or duration of T2D,
we can conduct survival analyses on red meat and T2D onset.

Another example is the effect of risk factor on patient survival time. A
study investigated the effect of socioeconomic status (SES) on the
survival time of cancer patients and how much cancer stage mediated the
effect. They found the effect of SES on survival time was partially
mediated by stage diagnosis, explaining 12% for lung cancer.

```{r echo=FALSE}

library(DiagrammeR)

grViz("
digraph {
  graph []
  node [shape = plaintext]
    X [label = 'socioeconomic status']
    M [label = 'stage diagnosis']
    Y [label = 'cancer mortality']
  edge [minlen = 1.5]
    X->Y
    X->M
    M->Y
  { rank = same; X; M; Y }
}")
```

The Cox proportional hazards model is commonly used for dealing with
survival data in medical literature. Cox regression estimates the
**hazard ratios** and the values are then used to determine the effect
of the mediator variable between the exposure and the survival time of
outcome.

## Cox model for common outcomes

Could we use the traditional approach for time-to-event outcomes? We
have introduced the difference and product methods for continuous and
binary outcomes in previous session. It is tempting to run a linear
regression model for the mediator and proportional hazard model for the
outcome, then use product or difference method to estimate the direct
effect and indirect effect.

However, 'non-collaspsibility' is a problem of the hazard ratio as odds
ratio @vanderweele_mediation_2016. Therefore, use of Cox regression to
approximately estimate indirect effects via difference or product of
coefficients rests on the assumption that the outcome is **rare**
@vanderweele_mediation_2016.

Where the outcome is common, measures of the indirect effect or
proportion mediated will be incorrect. Tein and Mackinnon considered
whether the product method and difference method yield comparable
results with respect to time-to-event outcomes @tein_estimating_2003.
They found that the methods coincides for the accelerated failure time
model but not for the proportional hazards model.

To sum up, we can only use the traditional approaches for rare outcomes.
Otherwise, we can use the product method to get an indication of whether
there is mediation, but be aware that the estimate is not accurate.

### Causal mediation for time-to-event outcomes

For a **survival outcome**, the outcome of interest will be survival
time (SV).

-   $SV (t) = P(V ≥ t)$ the survival function at time t
-   $SV (t\|c)=P(V ≥ t\|c)$ the survival function conditional on
    covariates C
-   $λV (t)$ : the hazard at time t
-   $λV (t\|c)$: conditional hazard at time t

If we consider the survival functions for a time-to-event outcome T, we
could decompose the survival function as follows:

$ST_a(t) - ST_a*(t) = [ST_aM_a(t)-ST_aM_a*(t)] + [ST_aM_a*(t)-ST_a*M_a*(t)]$

The first expression in brackets is the natural indirect effect on the
survival function scale and the second is the natural direct effect on
the survival function scale.

Similarly, we can demcompose the overal difference in hazards on the
hazard scale:

$λT_a(t) - λT_a*(t) = [λT_aM_a(t)-λT_aM_a*(t)] + [λT_aM_a*(t)-λT_a*M_a*(t)]$

### Assumptions of mediation analysis with a time-to-event outcome

Similar as our context, mediation analysis with a time-to-event outcome
have to satisfy below assumptions:

-   no unmeasured confounding of the exposure-outcome relation;
-   no unmeasured confounding of the mediator-outcome relation;
-   no unmeasured confounding of the exposure-mediation relation;
-   no exposure induced mediation-outcome confounding
-   Additionally, we assume that the mediator is measured for everyone
    before the outcome occurs.

When the outcome is common, we can use weight approach (Lange 2012)

::: callout-note

We will continue working on the obesity-CVD example in the Framingham
dataset.

The outcome of interest is death from cardiovascular diseases (CVD). The
underlying time scale is in days, starting at participants entered the
cohort. The exposure of interest is obesity status at baseline, where
a=1 indicates obese, a=0 indicates non-obese. The mediator is blood
pressure, the counterfactual mediator was M(a), where M(a) is the
mediator when the exposure is obesity (1) and M(0) is the mediator
values when the exposure is not-obese.

The question of interest here is whether the blood pressure mediates the
impact of obesity on CVD-related death (measured in years).

```{r}
library(tidyverse)

framingham <- read_csv(here::here("data/framingham_dataset.csv"))

framingham <- framingham %>%
  select(
    id = randid,
    bmi,
    m = sysbp,
    y = cvd,
    w1 = sex,
    w2 = cursmoke,
    w3 = age,
    y_time = timecvd
  ) %>%
  na.omit() %>%
  mutate(
    a = case_when(
      bmi >= 25 ~ 1,
      TRUE ~ 0
    ),
    y_time = y_time / 365.25 #change time-scale to years
  )
```

The new thing here is that we need to calculate the time to event. This
is already done in the dataset.

We need the outcome to be the time to event and specify event as the
outcome variable. Then we use the package as before.

```{r}
library(CMAverse)
library(survival)

res_rb_coxph <- cmest(
  data = framingham, model = "rb", outcome = "y_time", event = "y", exposure = "a",
  mediator = "m", basec = c("w1", "w2", "w3"), EMint = TRUE,
  mreg = list("linear"), yreg = "coxph",
  astar = 0, a = 1, mval = list(120),
  estimation = "imputation", inference = "bootstrap"
)


summary(res_rb_coxph)
```

## References
