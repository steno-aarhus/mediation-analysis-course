---
bibliography: papers.bib
---

```{r}
#| include: false

library(here)
library(DiagrammeR)
library(tidyverse)

```

# Estimation of effects using causal mediation analysis
<!-- Daniel 120 min -->

## Recap from yesterday

- causal inference in general
- causal mediation analysis
  - the controlled direct effect (CDE)
  - natural direct effect (NDE)
  - natural indirect effect (NIE)

```{r, engine="tikz", fig.cap = "Fig. 3. DAG under *no intermediate confounders* of the mediator-outcome relation affected by treatment", fig.ext=if (knitr:::is_latex_output()) "pdf" else "png", echo = FALSE}
\dimendef\prevdepth=0
\pgfdeclarelayer{background}
\pgfsetlayers{background,main}
\usetikzlibrary{arrows,positioning}
\tikzset{
>=stealth',
punkt/.style={
rectangle,
rounded corners,
draw=black, very thick,
text width=6.5em,
minimum height=2em,
text centered},
pil/.style={
->,
thick,
shorten <=2pt,
shorten >=2pt,}
}
\newcommand{\Vertex}[2]
{\node[minimum width=0.6cm,inner sep=0.05cm] (#2) at (#1) {$#2$};
}
\newcommand{\VertexR}[2]
{\node[rectangle, draw, minimum width=0.6cm,inner sep=0.05cm] (#2) at (#1) {$#2$};
}
\newcommand{\ArrowR}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) to[bend right=30] (#2);
\end{pgfonlayer}
}
\newcommand{\ArrowL}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) to[bend left=45] (#2);
\end{pgfonlayer}
}
\newcommand{\EdgeL}[3]
{ \begin{pgfonlayer}{background}
\draw[dashed,#3] (#1) to[bend right=-45] (#2);
\end{pgfonlayer}
}
\newcommand{\Arrow}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) -- +(#2);
\end{pgfonlayer}
}
\begin{tikzpicture}
  \Vertex{-4, 0}{W}
  \Vertex{0, 0}{M}
  \Vertex{-2, 0}{A}
  \Vertex{2, 0}{Y}
  \Arrow{W}{A}{black}
  \Arrow{A}{M}{black}
  \Arrow{M}{Y}{black}
  \ArrowL{W}{Y}{black}
  \ArrowL{A}{Y}{black}
  \ArrowL{W}{M}{black}
\end{tikzpicture}
```

## Regression-based approach
General problems with the traditional approach is when we have exposure-mediator interaction and non-linear relationships. 

Counterfactual-based direct and indirect effects can be estimated, provided that the no-confounding assumption hold.

Model for the mediator:
$E(M|A = a, W = w) = \beta_0 + \beta_1a + \beta'_2w $

Model for the outcome:
$E(Y|A = a, M = m, W = w) = \sigma_0 + \sigma_1a + \sigma_2m + \sigma_3am + \sigma'_4w $

From these two regression models we can estimate the CDE, NDE and NIE.

Let's use models to estimate this. We will investigate...

We load the NHANES dataset, only keep the variables we need for the example, remove missing data and scale the intake of red meat to be per 65 g/day.

For you own data, you may need to take missing data into account in another way.

```{r}

#nhanes <- read.csv(here::here("data", "nhanes_dataset.RData"))

#only keeping the variables we need for the example and removing missing variables

nhanes <- nhanes %>% select(id = seqn, w1 = age, w2 = gender, w3 = education, a = total_meat, y = plasma_fasting_glucose, m = serum_c_reactive_protein) %>% na.omit() %>% mutate(
  a = a/65, #scale to per 65 g/day
  m = log(m) #m is not normal, so we log transform
)

```
We can now run a model for the mediator only adjusting for a single variable. 

```{r}
lm_m <- lm(m ~ a + w1, data = nhanes)

summary(lm_m)
```
Note we found that higher red meat intake is associated with lower CRP.

Now, we run the model for the outcome, including an interaction.

```{r}
lm_y <- lm(y ~ a + m + a:m + w1, data = nhanes)

summary(lm_y)
```

In this model we can see:
 - red meat intake is associated with a higher blood glucose levels, independent of CRP
 - there is no statistically significant interaction between red meat and age. We keep this in the model because even though the interaction is not statistically significant, it can still contribute to the outcomes. For an interaction to be statistically significant we often need a lot of power.
 - CRP is associated with higher blood glucose levels, independent of red meat intake

### Controlled direct effect

The controlled direct effect can be obtained using this formula based on the regression coefficients:

$CDE(m) = (\sigma_1 + \sigma_3*m)(a - a^*) $

$a^*$ is for a change from level $a^*$ (=control) to level $a$ (=intervention).

For the controlled direct effect we set m to a specific value. 

Let's look at the distribution of m. 

```{r}

nhanes %>% select(m) %>% summary()

median_m_log <- round(median(nhanes$m), digits = 1)

median_m <- round(exp(median(nhanes$m)), digits = 1)
```

In this example we will set it to the median `r median_m_log` which is a CRP at `r median_m` which is a low level.

```{r}

CDE_m <- (lm_y$coefficients[2] + lm_y$coefficients[5]*median_m_log)*(1 - 0) 

round(as.numeric(CDE_m), digits = 2)
```
The CDE here is how much the outcome, here blood glucose, would change on average if the mediator, here inflammation, were fixed at level m=0.2 uniformly in the population but the treatment, red meat intake, was changed from 0 to 65 g/day. 

### (Pure) natural direct effect

PNDE can be obtained using this formula: 

$PNDE = (\sigma_1 + \sigma_3 * (\beta_0 + beta_1*a^* + \beta'_2*w))(a - a^*) $

We set the value for the confounder w1 for the interaction to be the mean value of w1.

```{r}
mean_w1 <- mean(nhanes$w1)
```

Then we calculate the PNDE 

```{r}

PNDE <- (lm_y$coefficients[2] + (lm_y$coefficients[5]*(lm_m$coefficients[1] + lm_m$coefficients[2]*0 + lm_m$coefficients[3]*mean_w1)))*(1 - 0) 

round(as.numeric(PNDE), digits = 2)
```
The NDE is how much the outcome would change if the treatment a was set at 65 versus 0 but for each individual the mediator was kept at the level it would have taken, for that individual, in the absence of the exposure.

### (Total) natural indirect effect

TNIE can be obtained by this formula:

$TNDE = (\sigma_1 + \sigma_3 * (\beta_0 + beta_1*a + \beta'_2*w))(a - a^*) $

```{r}

TNIE <- (lm_y$coefficients[2] + (lm_y$coefficients[5]*(lm_m$coefficients[1] + lm_m$coefficients[2]*1 + lm_m$coefficients[3]*mean_w1)))*(1 - 0) 

round(as.numeric(TNIE), digits = 2)
```
The TNIE is how much the outcome would change on average if the treatment were fixed at level a = 65 g/day but the mediator were changed from the level it would take if a* = 0 to the level it would take if a = 65 g/day.

Note that exposure has to have an effect on M otherwise this will be zero.

We see that inflammation through red meat has a very small effect on blood glucose levels.

### Pure natural indirect effect

$PNIE = (\sigma_2 * \beta_1 + \sigma_3 * \beta_1 * a^*)(a - a^*) $

```{r}
PNIE <- ((lm_y$coefficients[3] * lm_m$coefficients[2]) + (lm_y$coefficients[5] * lm_m$coefficients[2] * 0))*(1 - 0) 

round(as.numeric(PNIE), digits = 2)
```

### Total natural indirect effect

$TNIE = (\sigma_2 * \beta_1 + \sigma_3 * \beta_1 * a)(a - a^*) $

```{r}
TNIE <- ((lm_y$coefficients[3] * lm_m$coefficients[2]) + (lm_y$coefficients[5] * lm_m$coefficients[2] * 1))*(1 - 0) 

round(as.numeric(TNIE), digits = 2)
```
### total effect

The total effect can be decomposed as:

$TE = PNDE + TNIE $

```{r}
TE <- PNDE + TNIE

round(as.numeric(TE), digits = 2)
```

### Proportion mediation

From this, we can calculate the proportion mediated. 

$PM = \frac{TNIE}{TE} $

```{r}
PM <- TNIE / TE

as.numeric(PM) * 100
```
6.6% of the association is mediated by m. Not a lot.

### R package example for causal mediation analysis - CMAverse-package

```{r}
library(CMAverse)

res_rb <- cmest(data = nhanes, model = "rb", outcome = "y", exposure = "a",
                            mediator = "m", basec = c("w1"), EMint = TRUE,
                            mreg = list("linear"), yreg = "linear",
                            astar = 0, a = 1, mval = list(-1.6), 
                            estimation = "paramfunc", inference = "delta")

summary(res_rb)

```
## G-computation-based approach
Under the above mentioned assumptions, we can calculate the estimate using the G-computation.

We will visit a research question in the Framgingham dataset. 

> Does obesity lead to higher CVD risk by increasing higher blood pressure?

To make my life easier, we will call the exposure (obesity) A, mediator (systolic blood pressure) M, outcome (CVD) Y, A, M, and Y are all binary variables. In addition, I will add two confouding factors in the model (W1: sex, W2: current smoking status (cursmoke)). 

```{r}
framingham <- read.csv(here::here("data", "frmgham2.csv"))

framingham <- framingham %>% select(id = RANDID,
                                     BMI,
                                     SYSBP,
                                     y = CVD,
                                     w1 = SEX,
                                     w2 = CURSMOKE,
                                     w3 = AGE) 

%>% 
  na.omit() %>% 
  mutate(a = case_when(BMI >= 25 ~ "obese",
                       TRUE ~ "not obese"),
         m = case_when(SYSBP >= 140 ~ "high bp",
                       TRUE ~ "normal bp"))

```

First, we fit the outcome regression (including interaction terms)
```{r}
or_fit <- glm(y ~ a + m + w1 + w2 + a*m + m*w1 + age,
              family = binomial(), data = full_data)
summary(or_fit)
```

Based on the outcome regression model, we can predict Y under different scenarios. 

```{r}
get_EY_a_m_Wi <- function(full_data, or_fit, a, m){
  data_Aa_Mm_Wi <- full_data
  data_Aa_Mm_Wi$A <- a; data_Aa_Mm_Wi$M <- m
  predict(or_fit, newdata = data_Aa_Mm_Wi, type = "response")
}
## run prediction, for different scenarios (a=1 or 0, and m=1 or 0)
EY_A0_M0_Wi <- get_EY_a_m_Wi(full_data, or_fit, a = 0, m = 0)
EY_A0_M1_Wi <- get_EY_a_m_Wi(full_data, or_fit, a = 0, m = 1)
EY_A1_M0_Wi <- get_EY_a_m_Wi(full_data, or_fit, a = 1, m = 0)
EY_A1_M1_Wi <- get_EY_a_m_Wi(full_data, or_fit, a = 1, m = 1)
```

Next, we will run the mediation models, based on the values of A, and run the prediction models of M. 
```{r}
med_fit <- glm(M ~ A*W1 + W1*W2, family = binomial(), data = full_data)
# estimates of P(M = m | A = a, W = W_i), predict m based on a
get_Pm_a_Wi <- function(full_data, med_fit, a, m){
  data_Aa_Wi <- full_data; data_Aa_Wi$A <- a
  p <- predict(med_fit, newdata = data_Aa_Wi, type = "response")
  if(m == 1){
    p
  }else{
    1 - p
  }
}
##similary, we get the predicted values of m for different scenarios
PM0_A0_Wi <- get_Pm_a_Wi(full_data, med_fit, a = 0, m = 0)
PM1_A0_Wi <- get_Pm_a_Wi(full_data, med_fit, a = 0, m = 1)
PM0_A1_Wi <- get_Pm_a_Wi(full_data, med_fit, a = 1, m = 0)
PM1_A1_Wi <- get_Pm_a_Wi(full_data, med_fit, a = 1, m = 1)
```

Finally, we calculate the predicted Y on the estimates: 
```{r}
# E(E(Y | A = 1, M, W) | A = 1, W)
EY1M1_Wi <- EY_A1_M1_Wi * PM1_A1_Wi + EY_A1_M0_Wi * PM0_A1_Wi
# E(E(Y | A = 0, M, W) | A = 1, W)
EY0M1_Wi <- EY_A0_M1_Wi * PM1_A1_Wi + EY_A0_M0_Wi * PM0_A1_Wi
# E(E(Y | A = 1, M, W) | A = 0, W)
EY1M0_Wi <- EY_A1_M1_Wi * PM1_A0_Wi + EY_A1_M0_Wi * PM0_A0_Wi
# E(E(Y | A = 0, M, W) | A = 0, W)
EY0M0_Wi <- EY_A0_M1_Wi * PM1_A0_Wi + EY_A0_M0_Wi * PM0_A0_Wi
#Finally, we average over distribution of W to get effect esti
# estimate of E[Y(1, M(1))]
E_Y1M1 <- mean(EY1M1_Wi)
# estimate of E[Y(0, M(1))]
E_Y0M1 <- mean(EY0M1_Wi)
# estimate of E[Y(1, M(0))]
E_Y1M0 <- mean(EY1M0_Wi)
# estimate of E[Y(0, M(0))]
E_Y0M0 <- mean(EY0M0_Wi)
```
Now, you can freely calculate the natural direct effect and indirect effect: 

```{r}
E_Y1M1
E_Y1M0
E_Y0M1
E_Y0M0
```
