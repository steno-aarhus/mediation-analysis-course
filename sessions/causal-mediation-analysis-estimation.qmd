# Estimation of effects using causal mediation analysis

```{r}
#| include: false
library(here)
library(DiagrammeR)
library(tidyverse)
```

<!-- Daniel 120 min -->

::: callout-note
## Learning outcomes

-   Explain the theoretical concepts and statistical methods regarding
    causal mediation analysis
-   Perform causal mediation analysis using R software
-   Interpret results from causal mediation analysis
:::

## Recap from yesterday (part 1)

-   causal inference in general
-   causal mediation analysis
-   (many) different estimands

Fig. 3. DAG under *no intermediate confounders* of the mediator-outcome
relation affected by treatment

``` tikz
\dimendef\prevdepth=0
\pgfdeclarelayer{background}
\pgfsetlayers{background,main}
\usetikzlibrary{arrows,positioning}
\tikzset{
>=stealth',
punkt/.style={
rectangle,
rounded corners,
draw=black, very thick,
text width=6.5em,
minimum height=2em,
text centered},
pil/.style={
->,
thick,
shorten <=2pt,
shorten >=2pt,}
}
\newcommand{\Vertex}[2]
{\node[minimum width=0.6cm,inner sep=0.05cm] (#2) at (#1) {$#2$};
}
\newcommand{\VertexR}[2]
{\node[rectangle, draw, minimum width=0.6cm,inner sep=0.05cm] (#2) at (#1) {$#2$};
}
\newcommand{\ArrowR}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) to[bend right=30] (#2);
\end{pgfonlayer}
}
\newcommand{\ArrowL}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) to[bend left=45] (#2);
\end{pgfonlayer}
}
\newcommand{\EdgeL}[3]
{ \begin{pgfonlayer}{background}
\draw[dashed,#3] (#1) to[bend right=-45] (#2);
\end{pgfonlayer}
}
\newcommand{\Arrow}[3]
{ \begin{pgfonlayer}{background}
\draw[->,#3] (#1) -- +(#2);
\end{pgfonlayer}
}
\begin{tikzpicture}
  \Vertex{-4, 0}{W}
  \Vertex{0, 0}{M}
  \Vertex{-2, 0}{A}
  \Vertex{2, 0}{Y}
  \Arrow{W}{A}{black}
  \Arrow{A}{M}{black}
  \Arrow{M}{Y}{black}
  \ArrowL{W}{Y}{black}
  \ArrowL{A}{Y}{black}
  \ArrowL{W}{M}{black}
\end{tikzpicture}
```

::: callout-note
## Reflection on yesterday

Take 2 min to reflect on what your main 2 learning points from yesterday
were

Then, we take 3 min where you talk to your neighbor about these.

Lastly, we will take 5 mins to share in plenum.
:::

## Regression-based approach

General problems with the traditional approach is when we have
exposure-mediator interaction and non-linear relationships.

Counterfactual-based direct and indirect effects can be estimated,
provided that the no-confounding assumption hold. To be able to do so,
we need a model for the mediator and a model for the outcome.

Model for the mediator:

$E(M|A = a, W = w) = \beta_0 + \beta_1a + \beta'_2w$

Model for the outcome:

$E(Y|A = a, M = m, W = w) = \sigma_0 + \sigma_1a + \sigma_2m + \sigma_3am + \sigma'_4w$

From these two regression models we can estimate the CDE, NDE and NIE.

To try this out in practice, we load the NHANES dataset, only keep the
variables we need for the example, remove missing data and scale the
intake of red meat to be per 65 g/day (i.e., 1-unit higher = 65 g/day).

Note, that for your own data, you may need to take missing data into
account in another way.

<!-- Jie will update and put in previous section -->

```{r}
nhanes <- read.csv(here::here("data/nhanes_dataset.csv"))
# only keeping the variables we need for the example and removing missing variables
nhanes <- nhanes %>%
  select(
    id = seqn, 
    w1 = age, 
    w2 = gender, 
    w3 = education_clean, 
    w4 = smoke,
    a = total_redmeat, # this is the exposure
    m = magic_biomarker, # this is the mediator
    y = blood_glucose # this is the outcome
  ) %>% 
  na.omit()
```

We can now run a model for the mediator only adjusting for a single
variable. In practice you would adjust for many more variables to
satisfy the confounding assumptions.

```{r}
lm_m <- lm(m ~ a + w1 + w2 + w3 + w4, data = nhanes)
summary(lm_m)
```

Here, we see that higher red meat intake is associated with higher
inflammatory biomarker.

Now, we run the model for the outcome, including an interaction.

```{r}
lm_y <- lm(y ~ a + m + a:m + w1 + w2 + w3 + w4, data = nhanes)
summary(lm_y)
```

<!-- Daniel, I think the interpretation can use causal language, like red meat increased the glucose level-->

In this model we can see:

-   higher red meat intake is associated with a lower blood glucose
    levels, independent of CRP
-   there is no statistically significant interaction between red meat
    and age. We still keep this in the model because even though the
    interaction is not statistically significant, it can still
    contribute to the outcomes. For an interaction to be statistically
    significant we often need a lot of power
-   CRP is associated with higher blood glucose levels, independent of
    red meat intake

Based on the coefficients of these two models, we can now estimate the
different effects. The equations are from Valeri et al. \[valeri2013\]
and VanderWeele et al. \[vanderweele2014\].

### Controlled direct effect

The controlled direct effect can be obtained using this formula based on
the regression coefficients:

$CDE(m) = (\sigma_1 + \sigma_3*m)(a - a^*)$

$a^*$ is for a change from level $a^*$ (=control) to level $a$
(=intervention).

For the controlled direct effect we set m to a specific value.

Let's look at the distribution of m.

```{r}
nhanes %>%
  select(m) %>%
  summary()

median_m <- round(median(nhanes$m), digits = 1)
```

In this example we will set it to the median which is inflammatory
biomarker at `r median_m` which is a low level.

```{r}
CDE_m <- (lm_y$coefficients[2] + lm_y$coefficients[5] * median_m) * (1 - 0)

round(as.numeric(CDE_m), digits = 2)
```

The CDE is how much the outcome, here blood glucose, would change on
average if the mediator, here inflammation measured by CRP levels, were
fixed at level (m=0.2) uniformly in the population but the treatment,
red meat intake, was changed from 0 to 65 g/day. As we operate with a
linear model for simplicity, it does not matter here if the change is
from 0 to 65 or from 50 to 115 g/day.

The CDE answer the question, what would be the effect of A on Y, when
fixing M at a specific value for everyone in the population?
\[wang&arah2015\]

### (Pure) natural direct effect

PNDE can be obtained using this formula:

$PNDE = (\sigma_1 + \sigma_3 * (\beta_0 + beta_1*a^* + \beta'_2*w))(a - a^*)$

We set the value for the confounder w1 for the interaction to be the
mean value of w1.

```{r}
mean_w1 <- mean(nhanes$w1)
```

Then we calculate the PNDE.

```{r}
PNDE <- (lm_y$coefficients[2] + (lm_y$coefficients[5] * (lm_m$coefficients[1] + lm_m$coefficients[2] * 0 + lm_m$coefficients[3] * mean_w1))) * (1 - 0)

round(as.numeric(PNDE), digits = 2)
```

The PNDE is how much the outcome, blood glucose, would change if the
treatment a, red meat, was set at 65 versus 0 but for each individual
the mediator was kept at the level it would have taken, for that
individual, in the absence of the exposure.

In other words, to what extent does X cause Y via pathways other than
through M \[wang&arah2015\].

### (Total) natural direct effect

TNDE can be obtained by this formula:

$TNDE = (\sigma_1 + \sigma_3 * (\beta_0 + beta_1*a + \beta'_2*w))(a - a^*)$

```{r}
TNDE <- (lm_y$coefficients[2] + (lm_y$coefficients[5] * (lm_m$coefficients[1] + lm_m$coefficients[2] * 1 + lm_m$coefficients[3] * mean_w1))) * (1 - 0)

round(as.numeric(TNDE), digits = 2)
```

Here, the value of M is enabled to act (as opposed to the PNDE). Here we
see a little higher blood glucose, and that is the extra contribution
from inflammation.

The TNDE asks the question: "to what extent does A cause Y via pathways
other than through M, allowing M to boost up or tune down such effect at
the same time?"

### Pure natural indirect effect

The PNIE can be obtained by this formula:

$PNIE = (\sigma_2 * \beta_1 + \sigma_3 * \beta_1 * a^*)(a - a^*)$

```{r}
PNIE <- ((lm_y$coefficients[3] * lm_m$coefficients[2]) + (lm_y$coefficients[5] * lm_m$coefficients[2] * 0)) * (1 - 0)

round(as.numeric(PNIE), digits = 2)
```

The PNIE is different from the TNIE because it does not include the
interaction effect. We estimate the effect of red meat on inflammation
and then subsequent effect of inflammation on blood glucose. As we saw
above in the mediation model, red meat, lower inflammation. Hence,
lowering inflammation lower blood glucose a little here.

The PNIE answer the question: "to what extent does A cause Y via M only
(i.e., due to A affecting M and subsequently, M affecting Y), not
accounting for the possible interaction between A and M? In other words,
the effect that the exposure would have had if 'its only action were to
cause the mediator' (i.e., the portion of the effect for which mediation
is ''sufficient'')" \[wang&arah2015\].

### Total natural indirect effect

The TNIE can be obtained by this formula:

$TNIE = (\sigma_2 * \beta_1 + \sigma_3 * \beta_1 * a)(a - a^*)$

```{r}
TNIE <- ((lm_y$coefficients[3] * lm_m$coefficients[2]) + (lm_y$coefficients[5] * lm_m$coefficients[2] * 1)) * (1 - 0)

round(as.numeric(TNIE), digits = 2)
```

The TNIE is how much the outcome would change on average if the
treatment were fixed at level a = 65 g/day but the mediator were changed
from the level it would take if a\* = 0 to the level it would take if a
= 65 g/day.

Note that exposure has to have an effect on M otherwise this will be
zero.

The TNIE asks the question: to what extent does A cause Y via M (due to
A affecting M and subsequently, M affecting Y) and the possible
interaction between A and M in affecting Y? In other words, the effect
of exposure that 'would be prevented if the exposure did not cause the
mediator' (i.e., the portion of the effect for which mediation is
'necessary') \[wang&arah2015\].

This is often the effect we are interested in in biomedical research for
questions regarding mediation.

### Total effect

The total effect can be decomposed as:

$TE = PNDE + TNIE$

```{r}
TE <- PNDE + TNIE

round(as.numeric(TE), digits = 2)
```

This is the overall effect of red meat on blood glucose levels. Higher
red meat is associated with higher blood glucose.

### Proportion mediation

From this, we can calculate the proportion mediated.

$PM = \frac{TNIE}{TE}$

```{r}
PM <- TNIE / TE

as.numeric(PM) * 100
```

25% of the association between red meat and blood glucose is mediated by
M, inflammation.

### R package example for causal mediation analysis - CMAverse-package

All of this can be done using an R package. Here we can use several
different approach for the estimation and get confidence intervals.

First, we load the package and then we setup the model object. We have
to specify:

-   model: this is the type of model, or the approach for the causal
    mediation. We used the regression-based approach, so we will also do
    that here. However, one can also use weighting-based approach
    marginal structural models or the gformula.
-   outcome: your outcome variable
-   exposure: your exposure/intervention/treatment
-   mediator: your mediator
-   mreg: the type of model for the mediator. It is a list because you
    can have multiple mediators
-   yreg: type of regression for the outcome. E.g., linear, logistic,
    cox.
-   astar: Control/comparison intervention (value from)
-   a: Intervention (value to)
-   mval: the value for the mediator when estimating the CDE
-   EMin0t: indicator of whether there should be exposure and mediator
    interaction in the models.
-   estimation: method for estimating causal effects. Can use parametric
    functions or imputation.
-   inference: how to calculate confidence intervals. For
    regression-based we use the delta method. But for the other methods
    we use a bootstrap.

In short, all the things we did above can be estimated like this:

```{r}
library(CMAverse)

res_rb <- cmest(
  data = nhanes, model = "rb", outcome = "y", exposure = "a",
  mediator = "m", basec = c("w1"), EMint = TRUE,
  mreg = list("linear"), yreg = "linear",
  astar = 0, a = 1, mval = list(-1.6),
  estimation = "paramfunc", inference = "delta"
)

summary(res_rb)
```

We can check that the models were the ones we wanted to specify. And we
can see that the results are the same.

We can now try to adjust for multiple other confounders.

```{r}
res_rb_confounders <- cmest(
  data = nhanes, model = "rb", outcome = "y", exposure = "a",
  mediator = "m", basec = c("w1", "w2", "w3"), EMint = TRUE,
  mreg = list("linear"), yreg = "linear",
  astar = 0, a = 1, mval = list(-1.6),
  estimation = "paramfunc", inference = "delta"
)

summary(res_rb_confounders)
```

After adjustment for age, sex and education, there is not longer
statistically significant associations.

## G-computation-based approach

::: callout-note
# Recall no-confounding assumption of causal mediation

-   no exposure-mediator confounding
-   no mediator-outcome confounding
-   no exposure-outcome confounding
-   no exposure-induced mediator-outcome confounding (or intermediate
    confounding)

Note: Assumption iv is also called post-treatment confounding, or
treatment induced mediator-outcome confounding in randomization trials.

Assumptions i and iii could be satisfied in randomization trials. The
assumption ii and iv might be problematic, particularly in observational
studies.
:::

### A way forward

#### Intermediate confounding

Like the figure below, L is influenced by the exposure, also severs as a
confounder of M and Y. When considering the effect on Y of changes to X
via a specific mediator M, the presence of L is challenging and
regression-based methods could no longer handle this situation.

Conditional on L, we successfully block the backdoor path between
X-M-L-Y; but at the same time we also block the backdoor path X-L-Y,
which represents part of the direct effect of X on Y (all the paths not
going through M). Furthermore, if there is unmeasured confounder between
L and Y, adjusting on L will induce a noncausal association among A, U
and Y.

```{r  echo=FALSE }
# Creating The causal diagram for a mediation model
library(DiagrammeR)
grViz("
digraph {
  graph []
  node [shape = plaintext]
    X
    M
    L
    U [fontcolor = red]
    Y
  edge [minlen = 1.5]
    X->Y
    X->L
    L->Y
    L->M
    U->L
    U->Y
    X->M
    M->Y
    W->X
    W->M
    W->Y
  { rank = same; X; M; Y }
  { rank = min; L;}
  { rank = max; W;}
}")
```

#### Time-varying confounding

```{r  echo=FALSE }
# Creating The causal diagram for a mediation model
library(DiagrammeR)
grViz("
digraph {
  graph []
  node [shape = plaintext]
    W
    X0
    X1
    X2
    Xt
    M0
    M1
    M2
    Mt
    L0
    L1
    L2
    Lt
    Y
  edge [minlen = 1.5]
    X0 -> X1
    X1 -> X2
    X2 -> Xt
    Xt -> Y
    M0 -> M1
    M1 -> M2
    M2 -> Mt
    Mt -> Y
    L0 -> L1
    L1 -> L2
    L2 -> Lt
    X0 -> M0
    X1 -> M1
    X2 -> M2
    Xt -> Mt
    L0 -> X0
    L1 -> X1
    L2 -> X2
    Lt -> Xt
    Lt -> Y
    X0 -> L1
    X1 -> L2
    X2 -> Lt
    W -> L0
    W -> L1
    W -> L2
    W -> Lt
    W -> Y
  { rank = min; W;}
  { rank = same; L0; L1; L2; Lt }
  { rank = same; X0; X1; X2; Xt }
  { rank = same; M0; M1; M2; Mt; Y }
}")
```

### G-computation

The G-computation algorithm was first introduced by Robins (refer) for
estimating time-varying exposure causal in the presence of time-varying
confounders of exposure effects. When estimating total effect,
g-computation is generally equivalent to
inverse-probability-of-treatment weighting (IPTW). But in
high-dimensional settings, g-computation is more powerful. G-computation
(using g-formula) could also provide an intuitive method for decomposing
the total effect.

The basic idea of g-computation is to estimate the probability of the
outcome under a hypothetical action (i.e., intervention).

::: callout-note
Ingredients: A, Y, and controls W

-   Step 1: Model the outcome as a function of A and W.

-   Step 2: Duplicate the initial dataset in two counterfactual data
    sets. In on world, set A=1; in the other, set A=0. All other
    variables keep the original values.

-   Step 3: Apply the function in step 1 to predict each individual's
    outcome in the two counterfactual data sets, then get potential
    outcomes Y1 and Y0.

-   Step4: Aggregate these potential outcomes (e.g., average across all
    individuals) and contrast them (e.g, by taking the difference) to
    arrive at an estimate.
:::

### Example

I will demonstrate how to conduct g-computation in a simulated dataset.

```{r}
datasim <- function(n) {
  x1 <- rbinom(n, size = 1, prob = 0.5)
  x2 <- rbinom(n, size = 1, prob = 0.65)
  x3 <- rnorm(n, 0, 1)
  x4 <- rnorm(n, 0, 1)
  A <- rbinom(n, size = 1, prob = plogis(-1.6 + 2.5 * x2 + 2.2 * x3 + 0.6 * x4 + 0.4 * x2 * x4))
  Y.1 <- rbinom(n, size = 1, prob = plogis(-0.7 + 1 - 0.15 * x1 + 0.45 * x2 + 0.20 * x4 + 0.4 * x2 * x4))
  Y.0 <- rbinom(n, size = 1, prob = plogis(-0.7 + 0 - 0.15 * x1 + 0.45 * x2 + 0.20 * x4 + 0.4 * x2 * x4))
  Y <- Y.1 * A + Y.0 * (1 - A)
  data.frame(x1, x2, x3, x4, A, Y, Y.1, Y.0)
}

set.seed(120110) # for reproducibility
ObsData <- datasim(n = 10000) # really large sample
TRUE_EY.1 <- mean(ObsData$Y.1)
TRUE_EY.1 # mean outcome under A = 1
TRUE_EY.0 <- mean(ObsData$Y.0)
TRUE_EY.0
TRUE_MOR <- (TRUE_EY.1 * (1 - TRUE_EY.0)) / ((1 - TRUE_EY.1) * TRUE_EY.0)
TRUE_MOR # true marginal OR
```

The Total effect if we use traditional model:

```{r}
# Fit a logistic regression model predicting Y from the relevant confounders
Q <- glm(Y ~ A + x2 + x4 + x2 * x4, data = ObsData, family = binomial)
exp(Q$coef[2])
```

Let's use g-computation!

```{r}
# Copy the "actual" (simulated) data twice
A1Data <- A0Data <- ObsData
# In one world A equals 1 for everyone, in the other one it equals 0 for everyone
# The rest of the data stays as is (for now)
A1Data$A <- 1
A0Data$A <- 0
# Predict Y if A=1
Y_A1 <- predict(Q, A1Data, type="response") 
# Predict Y if A=0
Y_A0 <- predict(Q, A0Data, type="response") 
# Taking a look at the predictions
data.frame(Y_A1=head(Y_A1), Y_A0=head(Y_A0), TRUE_Y=head(ObsData$Y)) |> round(digits = 2)

# Mean outcomes in the two worlds
pred_A1 <- mean(Y_A1)
pred_A0 <- mean(Y_A0)
# Marginal odds ratio
MOR_gcomp <- (pred_A1*(1 - pred_A0))/((1 - pred_A1)*pred_A0)
# ATE (risk difference)
RD_gcomp <- pred_A1 - pred_A0
c(MOR_gcomp, RD_gcomp) |> round(digits=2)
```

The demo shows how to estimate total effect using g-computation. If you
would like to estimate PNDE, TNIT, PNIE, TNDE, then you also need to
predict two potential mediators observed in a hypothetical world in
which all individuals are intervention (A=1) or non-intervention (A=0).
We recommend take the advantage of R packages to do the work :)

```{r}
set.seed(1)
expit <- function(x) exp(x)/(1+exp(x))
n <- 10000
w <- rnorm(n, mean = 1, sd = 0.2)
a <- rbinom(n, 1, expit(0.3 + 0.5*w))
l <- rnorm(n, mean = 1 + a + 0.5*w, sd = 0.5)
m <- rbinom(n, 1, expit(1 + 2*a - l + 2*w))
y <- rbinom(n, 1, expit(0.3*a + 0.8*m + 0.5*a*m - 0.3*l + 0.4*w))
data <- data.frame(a, m, y, w, l)


library(CMAverse)
res_gformula <- cmest(data = data, model = "gformula", outcome = "y", exposure = "a",
                 mediator = "m", basec = c("w"), postc = "l", EMint = TRUE,
                 mreg = list("logistic"), yreg = "logistic",
                 postcreg = list("linear"),
                 astar = 0, a = 1, mval = list(1), 
                 estimation = "imputation", inference = "bootstrap", nboot = 2)

summary(res_gformula)
```
